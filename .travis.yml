# vim ft=yaml
# travis-ci.org definition

sudo: required

language: cpp
compiler:
  - gcc
  - clang
cache:
  - apt
  - ccache
env:
  - BUILD_TYPE=Debug
  - BUILD_TYPE=RelWithDebInfo
  - TEST=main-
  - TEST=archive-
  - TEST=binlog-
  - TEST=csv-
  - TEST=federated-
  - TEST=funcs_1-
  - TEST=funcs_2-
  - TEST=handler-
  - TEST=heap-
  - TEST=innodb-
  - TEST=innodb_fts-
  - TEST=innodb_zip-
  - TEST=maria-
  - TEST=multi_source-
  - TEST=optimizer_unfixed_bugs-
  - TEST=parts-
  - TEST=percona-
  - TEST=perfschema-
  - TEST=plugins-
  - TEST=roles-
  - TEST=rpl-
  - TEST=sys_vars-
  - TEST=unit-
  - TEST=vcol-
  # TODO - watch yaml syntax here.
  #global:
    # COVERITY_SCAN_TOKEN
    # TODO: https://scan.coverity.com/travis_ci
    #- secure: "xxxx"
addons:
  coverity_scan:

    # GitHub project metadata
    project:
      - name: MariaDB/server
      - version: 10.0
      - description: MariaDB Server

    # Where email notification of build analysis results will be sent
    notification_email: maria-developers@lists.launchpad.net

    # Commands to prepare for build_command
    build_command_prepend: cmake .   -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_BUILD_TYPE=Debug -DSYSTEM_TYPE="debian-linux-gnu"
               -DWITH_SSL=system -DWITH_ZLIB=system
               -DWITH_EMBEDDED_SERVER=ON -DWITH_ARCHIVE_STORAGE_ENGINE=ON -DWITH_BLACKHOLE_STORAGE_ENGINE=ON
               -DWITH_FEDERATEDX_STORAGE_ENGINE=ON  -DWITH_PLUGIN_FEEDBACK=ON -DWITH_INNOBASE_STORAGE_ENGINE=ON
               -DWITH_PARTITION_STORAGE_ENGINE=ON -DWITHOUT_MROONGA_STORAGE_ENGINE=ON
   
    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    build_command: make

    # Pattern to match selecting branches that will run analysis.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: coverity_scan-.*
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - mariadb-10
    packages:
      - gcc-4.9
      - g++-4.9
#      - binutils
#      - libjemalloc-dev
      - hardening-wrapper
      - zlib1g-dev
      - libbz2-dev
      - libsnappy-dev
      - libtool
      - libncurses5-dev
      - perl
      - libwrap0-dev
      - zlib1g-dev
      - libreadline-gplv2-dev
      - libssl-dev
      - libpam0g-dev
      - psmisc
      - po-debconf
      - chrpath
      - automake1.9
      - doxygen
      - texlive-latex-base
      - ghostscript
      - dpatch
      - gawk
      - bison
      - lsb-release
      - libaio-dev
      - devscripts
      - libevent-dev
      - sphinxsearch
      - rpm
      - libboost-all-dev
# TMP disable      - libjudy-dev
before_install:
# - sudo add-apt-repository -y "deb https://downloads.mariadb.com/files/MariaDB/repo/10.0/ubuntu precise main"
  - sudo add-apt-repository -y 'deb http://ftp.osuosl.org/pub/mariadb/repo/10.0/ubuntu precise main'
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x1BB943DB
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq  libjemalloc-dev
# need to do before installing hardening-wrapper
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 50
# still whitelist applies in VM mode
  - sudo apt-get install -y -qq  hardening-wrapper libreadline-gplv2-dev automake1.9 dpatch libaio-dev
# TMP disable  - sudo apt-get install -y -qq libjudy-dev
# try to pull binutil-2.23+ from trusty
  - sudo add-apt-repository -y 'deb http://archive.ubuntu.com/ubuntu trusty main'
  - sudo add-apt-repository -y 'deb http://archive.ubuntu.com/ubuntu trusty-security main'
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x3B4FE6ACC0B21F32
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq binutils
script:
  - mkdir debug_build; cd debug_build
  - cmake ..   -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSYSTEM_TYPE="debian-linux-gnu"
               -DWITH_SSL=system -DWITH_ZLIB=system
               -DWITH_EMBEDDED_SERVER=ON -DWITH_ARCHIVE_STORAGE_ENGINE=ON -DWITH_BLACKHOLE_STORAGE_ENGINE=ON
               -DWITH_FEDERATEDX_STORAGE_ENGINE=ON  -DWITH_PLUGIN_FEEDBACK=ON -DWITH_INNOBASE_STORAGE_ENGINE=ON
               -DWITH_PARTITION_STORAGE_ENGINE=ON -DWITHOUT_MROONGA_STORAGE_ENGINE=ON
# -DWITHOUT_MROONGA_STORAGE_ENGINE there because too many clang warnings
  - make -j 4
# Time limits on tests - 50mins - may not be possible
#  - [[ "${TRAVIS_BRANCH}" = '10.1' || "${TRAVIS_BRANCH}" = '10.0' ||  "${TRAVIS_BRANCH}"  = '5.5'  ]] &&
  - BIGTEST=--big-test
  - ulimit -c unlimited
  - cd "${TRAVIS_BUILD_DIR}"/debug_build/mysql-test
  - export MTR_BINDIR="${TRAVIS_BUILD_DIR}"/debug_build 
# No tmpfs - symlink depth https://travis-ci.org/openquery/mariadb-server/jobs/60070480 (--mem --clean-vardir )
  - export MTROPTS="--report-times --parallel=4 --force --fast --timer --retry-failure=2 --suite-timeout=39 ${BIGTEST}"
  - ./mysql-test-run.pl ${MTROPTS} --suite=${TEST}
  - cd "${TRAVIS_BUILD_DIR}"
  - export MYSQL_BUILD_CC=${CC}
  - export MYSQL_BUILD_CXX=${CXX}
# TMP disable  - echo | env DEB_BUILD_OPTIONS="parallel=4" debian/autobake-deb.sh
# TMP disable  - cmake .  -DBUILD_CONFIG=mysql_release -DRPM=centos6
# TMP disable  - make -j 4 package
# TMP disable  - find . -name rpmbuild-client.err -exec cat {} \; || true

after_failure:
  - cd "${TRAVIS_BUILD_DIR}"/debug_build/mysql-test
  - sh -c 'echo "Error in travis build: URL https://travis-ci.org/${TRAVIS_REPO_SLUG}/jobs/${TRAVIS_JOB_ID}" > var/README.txt'
  - ABORTFILE=travis-ci.org-${TRAVIS_REPO_SLUG/\//-}-jobs-${TRAVIS_JOB_ID}#${TRAVIS_JOB_NUMBER}-${TRAVIS_COMMIT}.tar.bz2
  - echo -e '\n\nTest failed - please report bug https://mariadb.atlassian.net/secure/RapidBoard.jspa?rapidView=24&projectKey=MDEV\n\n'
  - echo ABORTFILE=${ABORTFILE}
  - tar --dereference -jcf "${ABORTFILE}" var ../sql/mysqld
# TMP disable  - curl -v --user anonymous:build@travis-ci.org -T "${ABORTFILE}"  ftp://ftp.askmonty.org/private/
# TODO: add to error upload: [[ "${TRAVIS_BRANCH}" = '10.1' || "${TRAVIS_BRANCH}" = '10.0' ||  "${TRAVIS_BRANCH}"  = '5.5'  ]]

# TODO http://docs.travis-ci.com/user/deployment/custom/ - push to public upload of packages(?)
notifications:
  irc:
    channels:
      - "chat.freenode.net#maria"
    on_success: never # [always|never|change]
    on_failure: never
